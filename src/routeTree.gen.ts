/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DjSubmissionRouteImport } from './routes/dj-submission'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EventsCreateRouteImport } from './routes/events/create'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminLayoutRouteImport } from './routes/admin/_layout'

const AdminRouteImport = createFileRoute('/admin')()

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const DjSubmissionRoute = DjSubmissionRouteImport.update({
  id: '/dj-submission',
  path: '/dj-submission',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsCreateRoute = EventsCreateRouteImport.update({
  id: '/events/create',
  path: '/events/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AdminRoute,
} as any)
const AdminLayoutRoute = AdminLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dj-submission': typeof DjSubmissionRoute
  '/admin': typeof AdminLayoutRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/events/create': typeof EventsCreateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dj-submission': typeof DjSubmissionRoute
  '/admin': typeof AdminLayoutRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/events/create': typeof EventsCreateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dj-submission': typeof DjSubmissionRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_layout': typeof AdminLayoutRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/events/create': typeof EventsCreateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dj-submission'
    | '/admin'
    | '/admin/dashboard'
    | '/events/create'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dj-submission' | '/admin' | '/admin/dashboard' | '/events/create'
  id:
    | '__root__'
    | '/'
    | '/dj-submission'
    | '/admin'
    | '/admin/_layout'
    | '/admin/dashboard'
    | '/events/create'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DjSubmissionRoute: typeof DjSubmissionRoute
  AdminRoute: typeof AdminRouteWithChildren
  EventsCreateRoute: typeof EventsCreateRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dj-submission': {
      id: '/dj-submission'
      path: '/dj-submission'
      fullPath: '/dj-submission'
      preLoaderRoute: typeof DjSubmissionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/create': {
      id: '/events/create'
      path: '/events/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof EventsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_layout': {
      id: '/admin/_layout'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminLayoutRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminLayoutRoute: typeof AdminLayoutRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminLayoutRoute: AdminLayoutRoute,
  AdminDashboardRoute: AdminDashboardRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DjSubmissionRoute: DjSubmissionRoute,
  AdminRoute: AdminRouteWithChildren,
  EventsCreateRoute: EventsCreateRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
